/*
 * Copyright (c) 2020 The ZMK Contributors
 * Jason Biggs
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    /* combos { */
    /*     compatible = "zmk,combos"; */
    /**/
    /*     left-layer2-toggle { */
    /*         bindings = <&tog 2>; */
    /*         key-positions = <37 38>; */
    /*     }; */
    /**/
    /*     right-layer2-toggle { */
    /*         bindings = <&tog 2>; */
    /*         key-positions = <39 40>; */
    /*     }; */
    /* }; */

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 3>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            hold-trigger-on-release;
            flavor = "tap-preferred";
        };

        hmrs: hmrs {
            compatible = "zmk,behavior-hold-tap";
            label = "HMRS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <200>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };

        hmls: hmls {
            compatible = "zmk,behavior-hold-tap";
            label = "HMLS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        LayerReset {
            bindings = <&to 0>;
            key-positions = <36 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Layer0 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BSPC |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB                    &kp Q             &kp W             &kp F              &kp P                         &kp B                          &kp J                         &kp L                          &kp U               &kp Y              &kp SEMI           &kp BACKSLASH
&hmls LEFT_CONTROL ESCAPE  &hmls LEFT_ALT A  &hmls LEFT_GUI R  &hml LEFT_SHIFT S  &hml LCTRL T                  &hml LS(LA(LC(LEFT_GUI))) G    &hmr RS(RA(RC(RIGHT_GUI))) M  &hmr RCTRL N                   &hmr RIGHT_SHIFT E  &hmrs RIGHT_GUI I  &hmrs RIGHT_ALT O  &kp SQT
&kp LSHFT                  &kp Z             &kp X             &kp C              &kp D                         &kp V                          &kp K                         &kp H                          &kp COMMA           &kp DOT            &kp FSLH           &kp RIGHT_SHIFT
                                                               &mo 1              &hmls LEFT_COMMAND BACKSPACE  &kp ENTER                      &kp SPACE                     &hmrs RIGHT_COMMAND BACKSPACE  &mo 1
            >;
        };

        layer1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&sk LS(N5)     &sk LS(N1)     &sk LS(N2)     &kp LBKT      &kp RBKT      &sk LS(N8)    &kp N1      &kp N2      &kp N3      &kp N4     &kp N5     &tog 2
&sk LS(N3)     &kp MINUS      &sk LS(MINUS)  &sk LS(N9)    &sk LS(N0)    &kp EQUAL     &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT  &kp GRAVE  &trans
&sk LS(EQUAL)  &sk LS(GRAVE)  &sk LS(N4)     &sk LS(LBKT)  &sk LS(RBKT)  &sk LS(N7)    &kp N6      &kp N7      &kp N8      &kp N9     &kp N0     &trans
                                             &bl BL_DEC    &bl BL_INC    &bl BL_TOG    &bl BL_TOG  &bl BL_INC  &bl BL_DEC
            >;
        };

        layer2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans        &trans        &trans        &trans        &bt BT_CLR      &kp F1          &kp F2          &kp F3        &kp F4           &kp F5   &tog 3
&trans  &trans        &trans        &mkp LCLK     &mkp RCLK     &trans          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp F11  &kp F12
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp F6          &kp F7          &kp F8        &kp F9           &kp F10  &trans
                                    &trans        &trans        &trans          &trans          &trans          &trans
            >;
        };

        QWERTY {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB                    &kp Q             &kp W             &kp E              &kp R                         &kp T                          &kp Y                         &kp U                          &kp I               &kp O              &kp P                      &kp BACKSLASH
&hmls LEFT_CONTROL ESCAPE  &hmls LEFT_ALT A  &hmls LEFT_GUI S  &hml LEFT_SHIFT D  &hml LCTRL F                  &hml LS(LA(LC(LEFT_GUI))) G    &hmr RS(RA(RC(RIGHT_GUI))) H  &hmr RCTRL J                   &hmr RIGHT_SHIFT K  &hmrs RIGHT_GUI L  &hmrs RIGHT_ALT SEMICOLON  &kp SQT
&kp LSHFT                  &kp Z             &kp X             &kp C              &kp V                         &kp B                          &kp N                         &kp M                          &kp COMMA           &kp DOT            &kp FSLH                   &kp RIGHT_SHIFT
                                                               &mo 1              &hmls LEFT_COMMAND BACKSPACE  &kp ENTER                      &kp SPACE                     &hmrs RIGHT_COMMAND BACKSPACE  &mo 1
            >;
        };
    };
};
